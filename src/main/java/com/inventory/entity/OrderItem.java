package com.inventory.entity;

import javax.persistence.*;
import javax.validation.constraints.Min;
import com.fasterxml.jackson.annotation.JsonBackReference;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

/**
 * Represents an item within a customer order.
 * 
 * Each OrderItem is associated with a specific Product and a particular Order.
 * It captures the quantity of a product included in the order. This entity is
 * used to persist individual items within an order in the database.
 * 
 * Lombok annotations are used to reduce boilerplate by generating getters,
 * setters, constructors, etc.
 */
@Entity
@Data
@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
@Table(name = "order_items")
public class OrderItem {
    /**
     * Primary key for the OrderItem entity.
     * Auto-generated by the database using identity strategy.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    /**
     * The product associated with this order item.
     * Cannot be null as each item must refer to a valid product.
     */
    @ManyToOne(optional = false, fetch = FetchType.LAZY)
    @JoinColumn(name = "product_id", nullable = false)
    private Product product;

    /**
     * The quantity of the product ordered.
     * Must be at least 1 to be valid.
     */
    @Min(value = 1, message = "Quantity must be at least 1.")
    private Integer quantity;

    /**
     * The order that this item belongs to.
     * A single order can have multiple order items.
     */

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "order_id", nullable = false)
    @JsonBackReference
    private Order order;
}
